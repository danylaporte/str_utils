var searchIndex = JSON.parse('{\
"str_utils":{"doc":"","t":[8,8,0,0,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,3,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,8,8,10,10,10,10,10,10],"n":["CharExt","StrUtilsExt","char_map","cmp","contains_ai","contains_ai","contains_ai_ci","contains_ai_ci","contains_ci","contains_ci","ends_with_ai","ends_with_ai_ci","ends_with_ci","find_ai","find_ai_ci","find_ci","no_accent","no_accent","no_accent_lowercase","no_accent_uppercase","starts_with_ai","starts_with_ai_ci","starts_with_ci","MappedChars","borrow","borrow_mut","cjk_compat_variants","clone","clone_into","from","into","into_iter","lower_no_accent_char","lower_no_accent_chars","next","nfc","nfd","nfkc","nfkd","stream_safe","to_owned","try_from","try_into","type_id","EqExt","OrdExt","cmp_ai","cmp_ai_ci","cmp_ci","eq_ai","eq_ai_ci","eq_ci"],"q":["str_utils","","","","","","","","","","","","","","","","","","","","","","","str_utils::char_map","","","","","","","","","","","","","","","","","","","","","str_utils::cmp","","","","","","",""],"d":["A trait to remove accent on a char.","Trait for searching string with accent / case insensitive …","","Comparison module for strings and chars","Returns true if the given pattern matches a sub-slice of …","Returns true if the given pattern matches a sub-slice of …","Returns true if the given pattern matches a sub-slice of …","Returns true if the given pattern matches a sub-slice of …","Returns true if the given pattern matches a sub-slice of …","Returns true if the given pattern matches a sub-slice of …","Returns true if the given pattern matches a suffix of …","Returns true if the given pattern matches a suffix of …","Returns true if the given pattern matches a suffix of …","Returns the byte index of the first character of this …","Returns the byte index of the first character of this …","Returns the byte index of the first character of this …","Remove accent on a char.","Transform into a no accent String.","Transform into a no accent lowercase String.","Transform into a no accent uppercase String.","Returns true if the given pattern matches a prefix of …","Returns true if the given pattern matches a prefix of …","Returns true if the given pattern matches a prefix of …","Map chars to other chars.","","","","","","","","","Convert a char to lowercase without accent.","Convert the Chars iterator to an iterator having all …","","","","","","","","","","","Trait for equality comparisons of string and chars.","Trait for ordering of string and chars.","Accent insensitive comparison.","Accent / case insensitive comparison.","Case insensitive comparison.","Accent insensitive","Accent / Case insensitive","Case insensitive"],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,0,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,5,5,5],"f":[null,null,null,null,[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],[["usize",15],["option",4]]],[[["str",15]],[["usize",15],["option",4]]],[[["str",15]],[["usize",15],["option",4]]],[[],["str",15]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],null,[[]],[[]],[[],["replacements",3]],[[],["mappedchars",3]],[[]],[[]],[[]],[[]],[[["char",15]]],[[["chars",3]],["mappedchars",3]],[[],["option",4]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["streamsafe",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[],["ordering",4]],[[],["ordering",4]],[[],["ordering",4]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]]],"p":[[8,"StrUtilsExt"],[8,"CharExt"],[3,"MappedChars"],[8,"OrdExt"],[8,"EqExt"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};